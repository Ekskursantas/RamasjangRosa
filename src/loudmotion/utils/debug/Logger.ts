export class Logger {	public static IS_DEV:boolean = false;	public static DO_LOGGING:boolean = true;	private static _instance:any;	public static log(instance:any = null, logItem:any = null, ... args:any[]):void {		Logger._instance = instance;        if(Logger.IS_DEV && Logger.DO_LOGGING){			let category:any[] = [];			Logger._log(logItem, category, true);			if (args.length > 0) {				let strCat:string = category.length > 0 ? category[0] : "";				Logger._log(args, [strCat + "..."], true);			}        }	}	 static _log(message:any, category:any[] = null, tagEveryLine:boolean = false):void {		if (message == null) {			message = "null";		}		if (message.toString() == "[object Object]") {		} else {			Logger.sendString(message, category, tagEveryLine);		}	}	public static sendString(message:string, category:any[], tagEveryLine:boolean = false):void {        if(Logger.IS_DEV){			//force removal of loading traces			if (String(message).indexOf("onSaveProgress") > -1 || String(message).indexOf("onWriteTimer") > -1) {			}else{				if (tagEveryLine) {					message = Logger.tagLines(message, category);				}				if(message != null && message){					console.log(Logger._instance, message);				}			}        }	}	public static tagLines(message:string, category:any[]):string {		let messageArray:any[] = String(message).split("\n");		let prefix:string = "[ " + category + " ] ";		message = prefix + messageArray.join("\n" + prefix);		return message;	}}